#pragma kernel CSMain
#define BLACK_THRESHOLD 0.25
#define WHITE_THRESHOLD 0.75
#define GREY_THRESHOLD 0.05

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;
int m_width;
int m_height;
int m_pixelCount;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float4 color = m_source[id.xy];
    bool isBlack = (abs(color.r) <= BLACK_THRESHOLD) &&
                   (abs(color.g) <= BLACK_THRESHOLD) &&
                   (abs(color.b) <= BLACK_THRESHOLD);
    if (isBlack)
    {
        m_result[id.xy] = float4(0, 0, 0, 0);
        return;
    }
    bool isWhite = (abs(color.r) >= WHITE_THRESHOLD) &&
                   (abs(color.g) >= WHITE_THRESHOLD) &&
                   (abs(color.b) >= WHITE_THRESHOLD);
    if (isWhite)
    {
        m_result[id.xy] = float4(0, 0, 0, 0);
        return;
    }

    bool isGrey = (abs(color.r - color.g) < GREY_THRESHOLD) && (abs(color.g - color.b) < GREY_THRESHOLD);

    if (isGrey)
    {
        m_result[id.xy] = float4(0, 0, 0, 0);
        return;
    }

    m_result[id.xy] = color;
}
