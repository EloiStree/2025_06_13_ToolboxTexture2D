#pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;

int m_width;
int m_height;

#define STEP 0.06
//#define STEP 0.005       
#define BOT (1.0 - STEP)
#define TOP (1.0 + STEP)
#define CEN 1.0

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float2 resolution = float2(m_width, m_height);
    float2 fragCoord = float2(id.xy);
    float2 uv = fragCoord / resolution;

    float4 color = float4(0, 0, 0, 1);


    // All edges
    color =
        m_source[id.xy] * 4.0
        - m_source[clamp(int2((uv * float2(CEN, BOT)) * resolution), int2(0, 0), int2(m_width - 1, m_height - 1))]
        - m_source[clamp(int2((uv * float2(BOT, CEN)) * resolution), int2(0, 0), int2(m_width - 1, m_height - 1))]
        - m_source[clamp(int2((uv * float2(TOP, CEN)) * resolution), int2(0, 0), int2(m_width - 1, m_height - 1))]
        - m_source[clamp(int2((uv * float2(CEN, TOP)) * resolution), int2(0, 0), int2(m_width - 1, m_height - 1))];


    // Force alpha to 1
    color.a = 1.0;

    m_result[id.xy] = color;
}
