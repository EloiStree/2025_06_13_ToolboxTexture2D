#pragma kernel CSMain

RWTexture2D<float4> m_source; // Input and source
RWTexture2D<float4> m_result; // Output

int m_width;
int m_height;

float3 predatorHeat(float v)
{
    float value = 1.0 - v;

    float r = smoothstep(0.5, 0.3, value);
    float g = value < 0.3 ? smoothstep(0.0, 0.3, value) : smoothstep(1.0, 0.6, value);
    float b = smoothstep(0.4, 0.6, value);

    float strength = 0.5 + 0.5 * smoothstep(0.0, 0.1, value);

    return strength * float3(r, g, b);
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float2 uv = float2(id.xy) / float2(m_width, m_height);

    float4 color = m_source[id.xy];

    if (uv.x > 0.5)
    {
        float average = (color.r + color.g + color.b) / 2.5;
        color.rgb = predatorHeat(average);
    }

    m_result[id.xy] = color;
}
