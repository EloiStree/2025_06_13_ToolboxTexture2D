#pragma kernel CSMain

Texture2D<float4> m_source; // Read-only input (e.g., from a RenderTexture or Texture2D)
RWTexture2D<float4> m_result; // Write-only output

int m_width;
int m_height;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    int2 pixelCoord = int2(id.xy);

    // UV-based offset of 0.015 units in X direction
    int xOffset = int(0.015 * m_width);
    int2 rightCoord = pixelCoord + int2(xOffset, 0);

    // Clamp to avoid out-of-bounds
    rightCoord = clamp(rightCoord, int2(0, 0), int2(m_width - 1, m_height - 1));

    float4 left = m_source.Load(int3(pixelCoord, 0));
    float4 right = m_source.Load(int3(rightCoord, 0));

    float3 color = float3(left.r, right.g, right.b);
    color = clamp(color, 0.0, 1.0);

    m_result[pixelCoord] = float4(color, 1.0);
}
