#pragma kernel CSMain
// https://www.shadertoy.com/view/XssGD7 with GPT
RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;
int m_width;
int m_height;
int m_pixelCount;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float2 uv = float2(id.x, id.y) / float2(m_width, m_height);
    float offset = 1.0 / 512.0; // WEBCAM_RESOLUTION

    float3 o = float3(-offset, 0.0, offset);

    float4 gx = float4(0, 0, 0, 0);
    float4 gy = float4(0, 0, 0, 0);
    float4 t;

    gx += m_source[uint2(clamp(id.x + int(o.x), 0, m_width - 1), clamp(id.y + int(o.z), 0, m_height - 1))];
    gy += gx;

    gx += 2.0 * m_source[uint2(clamp(id.x + int(o.x), 0, m_width - 1), clamp(id.y + int(o.y), 0, m_height - 1))];
    t = m_source[uint2(clamp(id.x + int(o.x), 0, m_width - 1), clamp(id.y + int(o.x), 0, m_height - 1))];
    gx += t;
    gy -= t;

    gy += 2.0 * m_source[uint2(clamp(id.x + int(o.y), 0, m_width - 1), clamp(id.y + int(o.z), 0, m_height - 1))];
    gy -= 2.0 * m_source[uint2(clamp(id.x + int(o.y), 0, m_width - 1), clamp(id.y + int(o.x), 0, m_height - 1))];

    t = m_source[uint2(clamp(id.x + int(o.z), 0, m_width - 1), clamp(id.y + int(o.z), 0, m_height - 1))];
    gx -= t;
    gy += t;

    gx -= 2.0 * m_source[uint2(clamp(id.x + int(o.z), 0, m_width - 1), clamp(id.y + int(o.y), 0, m_height - 1))];
    t = m_source[uint2(clamp(id.x + int(o.z), 0, m_width - 1), clamp(id.y + int(o.x), 0, m_height - 1))];
    gx -= t;
    gy -= t;

    float4 grad = sqrt(gx * gx + gy * gy);

    m_result[id.xy] = grad;
}
