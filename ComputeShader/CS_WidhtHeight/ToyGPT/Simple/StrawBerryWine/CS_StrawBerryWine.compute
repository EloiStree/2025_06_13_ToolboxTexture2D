#pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;

int m_width;
int m_height;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float2 fragCoord = float2(id.x, id.y);
    float2 uv = fragCoord / float2(m_width, m_height);

    float4 texColor = m_source[id.xy]; // For true UV sampling, use Sample if available
    float3 col = texColor.rgb;

    // col.r = textureLod(iChannel0, uv, 5.0).r; // Not directly supported in RWTexture2D

    // col.gb = mix(vec2(0.5), col.gb, smoothstep(0.0, 0.5, abs(col.gb - vec2(0.5))));
    float2 gb = col.gb;
    gb = lerp(float2(0.5, 0.5), gb, smoothstep(0.0, 0.5, abs(gb - float2(0.5, 0.5))));
    gb = 0.5 * (gb + gb.yx);
    col.g = gb.x;
    col.b = gb.y;

    // col.rgb = max(col.rgb, col.rgb - fmod(col.rgb, float3(0.25, 0.25, 0.25)) + 0.125);
    // Uncomment above if needed

    m_result[id.xy] = float4(col, 1.0);
}