 #pragma kernel CSMain

 RWTexture2D<float4> m_source;
 RWTexture2D<float4> m_result;

 int m_width;
 int m_height;
 float m_time;

 [numthreads(8, 8, 1)]
 void CSMain(uint3 id : SV_DispatchThreadID)
 {
     if (id.x >= m_width || id.y >= m_height)
         return;

     float2 uv = float2(id.x, id.y) / float2(m_width, m_height);
     float4 srcColor = m_source[id.xy];
     float3 col = srcColor.rgb;

     // simple colorspace transforms
     float3x3 rot = float3x3(
         -0.3999643, 0.82848493, -0.39197103,
          0.74160659, 0.04123861, -0.6695663,
          0.53856125, 0.55849092, 0.63090386
     );
     float3x3 rot_inv = float3x3(
         -0.3999643, 0.74160659, 0.53856125,
          0.82848493, 0.04123861, 0.55849092,
         -0.39197103, -0.6695663, 0.63090386
     );
     float3 cent = float3(0.47968451, 0.450743, 0.45227517);

     float3 rel = mul(rot, col - cent);

     rel.xy *= 0.5 * rel.xy * rel.xy;
     rel.z *= 1.0 + 0.5 * step(0.0, rel.z);
     // Make the filter more yellowish by increasing R and G, decreasing B
     float3 new_col = mul(rot_inv, rel) + cent + float3(0.25, 0.15, -0.18);

     // Set filter to maximum (no mixing, always use new_col)
     col = new_col;

     m_result[id.xy] = float4(col, 1.0);
 }