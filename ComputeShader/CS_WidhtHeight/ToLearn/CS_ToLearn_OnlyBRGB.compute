#pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;

int m_width;
int m_height;


[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float4 c = m_source[id.xy];
    
    float min = c.r;
    if (min < c.g)
        min = c.g;
    if (min < c.b)
        min = c.b;
    
    if (min < 0.4)
    {
        m_result[id.xy] = float4(0, 0, 0, 1);
        return;
    }
        
    // Red is very close to black when white is around
    // Green is very close to white when white is around
    // Blue is close toe white and cyan when white is around.
    
    // For webcam, you need to filter black to 0.6-0.8 because black blend with other color
    // If you use a screen then black can be 0.2-0.4
    float allowBlack = 0.2;
    float allowWhite = 0.1;
    if (c.r < allowBlack && c.g < allowBlack && c.b < allowBlack)
        m_result[id.xy] = float4(0, 0, 0, 1);
    else if (c.r > allowWhite && c.g > allowWhite && c.b > allowWhite)
        m_result[id.xy] = float4(0, 1, 0, 1);
    else if (c.r > c.g && c.r > c.b)
        m_result[id.xy] = float4(1, 0, 0, 1);
    else if (c.b > c.g && c.b > c.r)
        m_result[id.xy] = float4(0, 0, 1, 1);
    else
        m_result[id.xy] = float4(0, 1, 0, 1);
    
    
}
