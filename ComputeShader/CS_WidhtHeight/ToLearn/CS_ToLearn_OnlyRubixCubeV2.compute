#pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;

int m_width;
int m_height;


[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

   
    float4 c = m_source[id.xy];
    
    float isLightTrue = 0.5f;
    float isDarkTrue = 0.3f;
    bool redLight = c.r > isLightTrue;
    bool greenLight = c.g > isLightTrue;
    bool blueLight = c.b > isLightTrue;
    bool redDark = c.r < isDarkTrue;
    bool greenDark = c.g < isDarkTrue;
    bool blueDark = c.b < isDarkTrue;
    
    
        if (redLight && greenDark && blueDark)
        m_result[id.xy] = float4(1, 0, 0, 1);
    else if (redDark && greenLight && blueDark)
        m_result[id.xy] = float4(0, 1, 0, 1);
    else if (redDark && greenDark && blueLight)
        m_result[id.xy] = float4(0, 0, 1, 1);
    else if (redDark && greenLight && blueLight)
        m_result[id.xy] = float4(0, 1, 1, 1);
    else if (redLight && greenDark && blueLight)
        m_result[id.xy] = float4(1, 0, 1, 1);
    else if (redLight && greenLight && blueDark)
        m_result[id.xy] = float4(1, 1, 0, 1);
    else if (redLight && greenLight && blueLight)
        m_result[id.xy] = float4(1, 1, 1, 1);
    else
        m_result[id.xy] = float4(0, 0, 0, 1);

    
    
    
}
