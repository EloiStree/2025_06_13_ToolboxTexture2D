#pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;
int m_width;
int m_height;
int m_pixelCount;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;
    
    float4 srcColor = m_source[id.xy];

    // Define magenta color and tolerance
    float3 magenta = float3(1.0, 0.0, 1.0);
    float tolerance = 0.2;

    // Compute color distance
    float dist = distance(srcColor.rgb, magenta);

    float4 color;
    if (dist < tolerance)
    {
        // Keep original color if close to magenta
        color = srcColor;
    }
    else
    {
        // Convert to grayscale
        float gray = dot(srcColor.rgb, float3(0.299, 0.587, 0.114));
        color = float4(gray, gray, gray, srcColor.a);
    }

    m_result[id.xy] = color;
}
