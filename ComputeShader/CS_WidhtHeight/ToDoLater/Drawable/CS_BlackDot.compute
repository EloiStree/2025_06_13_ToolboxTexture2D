//// Unity URP Compute Shader version of the provided ShaderToy code

//#pragma kernel CSMain

//RWTexture2D<float4> m_source; // Input texture (iChannel0)
////RWTexture2D<float4> m_extra;  // Extra input texture (iChannel1)
//RWTexture2D<float4> m_result; // Output texture

//int m_width;
//int m_height;
//float m_time;

//#define mouse_x 0.5

//[numthreads(8,8,1)]
//void CSMain (uint3 id : SV_DispatchThreadID)
//{
//    if (id.x >= m_width || id.y >= m_height) return;

//    float2 fragCoord = float2(id.x, id.y);
//    float2 iResolution = float2(m_width, m_height);

//    // Normalized pixel coordinates (from 0 to 1)
//    float2 uv = fragCoord / iResolution;

//    // Time varying pixel color
//    float3 col = m_source[id.xy].rgb;

//    float2 extraUV = fmod(3.0 * uv, 1.0);
//    uint2 extraIdx = uint2(extraUV * iResolution);
//    extraIdx.x = clamp(extraIdx.x, 0, m_width - 1);
//    extraIdx.y = clamp(extraIdx.y, 0, m_height - 1);
//    float3 extra_col = m_extra[extraIdx].rgb - float3(0.5, 0.5, 0.5);

//    col += extra_col;

//    float3x3 blowout = float3x3(
//        6.62337, 6.13667, 6.25027,
//        6.13667, 6.36245, 7.10737,
//        6.25027, 7.10737, 8.68193
//    );

//    float3 cent = float3(0.47968451, 0.450743, 0.45227517);
//    float3 cent_tex = m_source[id.xy].rgb; // Unity doesn't support textureLod in compute, fallback to base level
//    cent = cent_tex;

//    float v = sin(4.0 * m_time + 20.0 * uv.y);
//    float weight = 1.02 * smoothstep(uv.x - 0.4, uv.x, 1.5 * (mouse_x * m_width) / m_width - 0.25);

//    float3x3 identity = float3x3(
//        1.0, 0.0, 0.0,
//        0.0, 1.0, 0.0,
//        0.0, 0.0, 1.0
//    );

//    blowout = (1.0 - weight) * blowout + weight * identity;

//    col = cent + mul(blowout, (col - cent));

//    m_result[id.xy] = float4(col, 1.0);
//}