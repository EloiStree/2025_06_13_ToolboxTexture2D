//fragColor = col;
    #pragma kernel CSMain

RWTexture2D<float4> m_source;
RWTexture2D<float4> m_result;

int m_width;
int m_height;
float m_time;

#define mouse_x 0.5
#define mouse_y 0.5


[numthreads(8, 8, 1)]
    void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= m_width || id.y >= m_height)
        return;

    float2 uv = float2(id.x, id.y) / float2(m_width, m_height);
    float4 col = m_source[id.xy];

        // Calculate Brightness
    float brightness = (col.r + col.g + col.b) / 3.0;

        // Ripple parameters
    float bandWidth = 0.1;
    float speed = mouse_x*m_width / m_width;
    float t = m_time * speed;

    float bCentroid = fmod(mouse_x + t, 1.0);
    float bHighBound = bCentroid + bandWidth;
    float bLowBound = bCentroid - bandWidth;

    bool wrapCond = bHighBound < bLowBound;
    bool bCond = false;

    if (!wrapCond)
    {
        bCond = (brightness < bHighBound) && (brightness > bLowBound);
    }
    else
    {
        bCond = !((brightness > bHighBound) && (brightness < bLowBound));
    }

    float4 fragColor;
    if (bCond)
    {
        fragColor = float4(
                fmod(t * 0.3, 0.5) + (0.4 * uv.x),
                fmod(t * 0.5, 0.5) + (0.4 * uv.y),
                fmod(t * 0.9, 0.9),
                1.0
            );
    }
    else
    {
        fragColor = float4(0.0, 0.0, 0.0, 1.0);
    }

    m_result[id.xy] = fragColor;
}